import("//build/tools/cmd.gni")

# @ https://stackoverflow.com/questions/9379363/how-to-build-openssl-with-mingw-in-windows
# To build OpenSSL, you need a working Perl installation.
# Download OpenSSL from its official website and decompress the archive.
# Windows 32/64 bits - MinGW
# You must run these commands from a MSys console.
# For 32 bits:
# perl Configure mingw no-shared no-asm --prefix=/c/OpenSSL
# For 64 bits:
# perl Configure mingw64 no-shared no-asm --prefix=/C/OpenSSL-x64
# Then:
# make depend
# make
# make install
# The make depend line is only needed on the most recent OpenSSL version if you specified any of the no-... options.
# Note that this will compile OpenSSL in static mode.
# If at some point you get a "make (e=2):" error, ensure you don't have another "make.exe" in your PATH or just type /bin/make instead of make.

# perl Configure VC-WIN64A threads no-asm no-ssl2 no-ssl3 no-idea enable-fips no-mdc2 no-ec2m no-shared enable-md2 enable-rc5 --prefix=%PATH_INSTALL%
cmd("openssl") {
  build_configure = ""
  build_configure_type = "--release"
  if (is_win) {
    if (current_cpu == "x86") {
      build_configure = "perl Configure mingw"
    } else {
      build_configure = "perl Configure mingw64"
    }
  } else {
    build_configure = "./Configure"
  }
  if (is_debug) {
    build_configure_type = "--debug"
  }
  dir_source = rebase_path("//3rdparty/openssl", root_build_dir)
  dir_install = rebase_path(
          "//3rdparty/installed/${current_os}/${compile_configure_type}/openssl",
          root_build_dir)
  inv_terminal = []
  inv_script_clean = [
    "cd {}",
    "&&",
    "make clean",
  ]
  inv_script_install = [
    "cd {}",
    "&&",
    "make install",
  ]

  inv_script_configure = [
    "cd {}",
    "&&",
    "${build_configure}",
    "threads",
    "no-asm",
    "no-ssl2",
    "no-ssl3",
    "no-idea",
    "enable-fips",
    "no-mdc2",
    "no-ec2m",
    "no-shared",
    "enable-md2",
    "enable-rc5",
    "${build_configure_type}",
    "--prefix={}",
  ]

  inv_script_build = [
    "cd {}",
    "&&",
    "make -j4",
  ]
}
